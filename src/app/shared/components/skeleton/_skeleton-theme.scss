@use 'sass:map';
@use '@angular/material' as mat;

@mixin componentColorMixins($theme) {}

@mixin componentTypographyMixins($theme) {}

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: mat.get-color-from-palette($color-config, 'primary');
  $accent-palette: mat.get-color-from-palette($color-config, accent);
  $warn-palette: mat.get-color-from-palette($color-config, warn);
  $foreground-palette: mat.get-color-from-palette($color-config, foreground);
  $background-palette: mat.get-color-from-palette($color-config, background);
  $grey-palette: mat.$gray-palette;

  aj-skeleton {
    .skeleton {
      background: mat.get-color-from-palette($background-palette, 'app-bar');

      /** Styles for progress animation */
      &.progress {
        &:before {
          background-image: linear-gradient(
                          90deg,
                          transparent,
                          mat.get-color-from-palette($grey-palette, 200),
                          transparent,
          );
        }
      }
      &.progress-dark {
        &:before {
          background-image: linear-gradient(
                          90deg,
                          transparent,
                          mat.get-color-from-palette($grey-palette, 400),
                          transparent,
          );
        }
      }
    }
  }

  @include componentColorMixins($theme);
}

@mixin typography($theme) {
  $typography-config: mat.get-typography-config($theme);

  aj-skeleton {}

  @include componentTypographyMixins($theme);
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null { @include color($theme); }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null { @include typography($theme); }
}
