import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogModule, } from '@angular/material/dialog';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { FormsModule } from '@angular/forms';
import { MatButtonModule } from '@angular/material/button';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/material/form-field";
import * as i3 from "@angular/material/input";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/material/button";
export class NewFolderDialogComponent {
    /**
     * Constructor for the dialog component.
     *
     * @param {NewFolderDialogContract} data - Injected data containing initial
     * folder information.
     * @param {MatDialogRef} dialogRef - A reference to this dialog instance,
     * used for controlling its behavior.
     */
    constructor(data, dialogRef) {
        this.data = data;
        this.dialogRef = dialogRef;
    }
    /**
     * Closes the dialog and passes back the entered folder name.
     */
    createFolder() {
        const newFolderCloseContract = {
            folderName: this.data.folderName,
        };
        this.dialogRef.close(newFolderCloseContract);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.3", ngImport: i0, type: NewFolderDialogComponent, deps: [{ token: MAT_DIALOG_DATA }, { token: i1.MatDialogRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.3", type: NewFolderDialogComponent, isStandalone: true, selector: "anon-new-folder-dialog", ngImport: i0, template: "<h1 mat-dialog-title>Create folder</h1>\n\n<mat-dialog-content>\n  <form class=\"new-folder\" (ngSubmit)=\"createFolder()\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>New folder name</mat-label>\n      <input matInput name=\"folderName\" [(ngModel)]=\"data.folderName\">\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\n  <button mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!data.folderName\"\n          (click)=\"createFolder()\">Create</button>\n</mat-dialog-actions>\n", styles: ["::ng-deep .mat-dialog-container{border-radius:1rem}mat-dialog-content form.new-folder{margin-top:1rem}\n"], dependencies: [{ kind: "ngmodule", type: MatDialogModule }, { kind: "directive", type: i1.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i1.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "ngmodule", type: MatFormFieldModule }, { kind: "component", type: i2.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i2.MatLabel, selector: "mat-label" }, { kind: "ngmodule", type: MatInputModule }, { kind: "directive", type: i3.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i4.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i5.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.3", ngImport: i0, type: NewFolderDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'anon-new-folder-dialog', standalone: true, imports: [
                        MatDialogModule,
                        MatFormFieldModule,
                        MatInputModule,
                        FormsModule,
                        MatButtonModule,
                    ], template: "<h1 mat-dialog-title>Create folder</h1>\n\n<mat-dialog-content>\n  <form class=\"new-folder\" (ngSubmit)=\"createFolder()\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>New folder name</mat-label>\n      <input matInput name=\"folderName\" [(ngModel)]=\"data.folderName\">\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\n  <button mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!data.folderName\"\n          (click)=\"createFolder()\">Create</button>\n</mat-dialog-actions>\n", styles: ["::ng-deep .mat-dialog-container{border-radius:1rem}mat-dialog-content form.new-folder{margin-top:1rem}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i1.MatDialogRef }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3LWZvbGRlci1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhci1maXJlYmFzZS1zdG9yYWdlLW1hbmFnZXIvc3JjL2xpYi9jb21wb25lbnRzL25ldy1mb2xkZXItZGlhbG9nL25ldy1mb2xkZXItZGlhbG9nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItZmlyZWJhc2Utc3RvcmFnZS1tYW5hZ2VyL3NyYy9saWIvY29tcG9uZW50cy9uZXctZm9sZGVyLWRpYWxvZy9uZXctZm9sZGVyLWRpYWxvZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQ0wsZUFBZSxFQUFFLGVBQWUsR0FDakMsTUFBTSwwQkFBMEIsQ0FBQztBQUNsQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7OztBQWdDM0QsTUFBTSxPQUFPLHdCQUF3QjtJQUNuQzs7Ozs7OztPQU9HO0lBQ0gsWUFFUyxJQUE2QixFQUM1QixTQUFpRDtRQURsRCxTQUFJLEdBQUosSUFBSSxDQUF5QjtRQUM1QixjQUFTLEdBQVQsU0FBUyxDQUF3QztJQUN4RCxDQUFDO0lBRUo7O09BRUc7SUFDSCxZQUFZO1FBQ1YsTUFBTSxzQkFBc0IsR0FBaUM7WUFDM0QsVUFBVSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVTtTQUNqQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUMvQyxDQUFDOzhHQXZCVSx3QkFBd0Isa0JBVXpCLGVBQWU7a0dBVmQsd0JBQXdCLGtGQ3ZDckMsMHBCQW1CQSxpS0RhSSxlQUFlLCtuQkFDZixrQkFBa0IsMFNBQ2xCLGNBQWMsMFdBQ2QsV0FBVyx1aUNBQ1gsZUFBZTs7MkZBR04sd0JBQXdCO2tCQWJwQyxTQUFTOytCQUNFLHdCQUF3QixjQUd0QixJQUFJLFdBQ1A7d0JBQ1AsZUFBZTt3QkFDZixrQkFBa0I7d0JBQ2xCLGNBQWM7d0JBQ2QsV0FBVzt3QkFDWCxlQUFlO3FCQUNoQjs7MEJBWUUsTUFBTTsyQkFBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIE1BVF9ESUFMT0dfREFUQSwgTWF0RGlhbG9nTW9kdWxlLCBNYXREaWFsb2dSZWYsXG59IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQgeyBNYXRGb3JtRmllbGRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9mb3JtLWZpZWxkJztcbmltcG9ydCB7IE1hdElucHV0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaW5wdXQnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBNYXRCdXR0b25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xuXG4vKipcbiAqIERlZmluZXMgdGhlIGRhdGEgY29udHJhY3QgZm9yIGluZm9ybWF0aW9uIHBhc3NlZCB0byB0aGVcbiAqIE5ld0ZvbGRlckRpYWxvZ0NvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBOZXdGb2xkZXJEaWFsb2dDb250cmFjdCB7XG4gIGZvbGRlck5hbWU6IHN0cmluZyxcbiAgcGF0aDogc3RyaW5nLFxufVxuXG4vKipcbiAqIERlZmluZXMgdGhlIGRhdGEgY29udHJhY3QgZm9yIGluZm9ybWF0aW9uIHJldHVybmVkIHdoZW5cbiAqIGNsb3NpbmcgdGhlIE5ld0ZvbGRlckRpYWxvZ0NvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBOZXdGb2xkZXJEaWFsb2dDbG9zZUNvbnRyYWN0IHtcbiAgZm9sZGVyTmFtZTogc3RyaW5nLFxufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhbm9uLW5ldy1mb2xkZXItZGlhbG9nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25ldy1mb2xkZXItZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmw6ICcuL25ldy1mb2xkZXItZGlhbG9nLmNvbXBvbmVudC5zY3NzJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIE1hdERpYWxvZ01vZHVsZSxcbiAgICBNYXRGb3JtRmllbGRNb2R1bGUsXG4gICAgTWF0SW5wdXRNb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgTWF0QnV0dG9uTW9kdWxlLFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBOZXdGb2xkZXJEaWFsb2dDb21wb25lbnQge1xuICAvKipcbiAgICogQ29uc3RydWN0b3IgZm9yIHRoZSBkaWFsb2cgY29tcG9uZW50LlxuICAgKlxuICAgKiBAcGFyYW0ge05ld0ZvbGRlckRpYWxvZ0NvbnRyYWN0fSBkYXRhIC0gSW5qZWN0ZWQgZGF0YSBjb250YWluaW5nIGluaXRpYWxcbiAgICogZm9sZGVyIGluZm9ybWF0aW9uLlxuICAgKiBAcGFyYW0ge01hdERpYWxvZ1JlZn0gZGlhbG9nUmVmIC0gQSByZWZlcmVuY2UgdG8gdGhpcyBkaWFsb2cgaW5zdGFuY2UsXG4gICAqIHVzZWQgZm9yIGNvbnRyb2xsaW5nIGl0cyBiZWhhdmlvci5cbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKVxuICAgIHB1YmxpYyBkYXRhOiBOZXdGb2xkZXJEaWFsb2dDb250cmFjdCxcbiAgICBwcml2YXRlIGRpYWxvZ1JlZjogTWF0RGlhbG9nUmVmPE5ld0ZvbGRlckRpYWxvZ0NvbXBvbmVudD4sXG4gICkge31cblxuICAvKipcbiAgICogQ2xvc2VzIHRoZSBkaWFsb2cgYW5kIHBhc3NlcyBiYWNrIHRoZSBlbnRlcmVkIGZvbGRlciBuYW1lLlxuICAgKi9cbiAgY3JlYXRlRm9sZGVyKCkge1xuICAgIGNvbnN0IG5ld0ZvbGRlckNsb3NlQ29udHJhY3Q6IE5ld0ZvbGRlckRpYWxvZ0Nsb3NlQ29udHJhY3QgPSB7XG4gICAgICBmb2xkZXJOYW1lOiB0aGlzLmRhdGEuZm9sZGVyTmFtZSxcbiAgICB9O1xuICAgIHRoaXMuZGlhbG9nUmVmLmNsb3NlKG5ld0ZvbGRlckNsb3NlQ29udHJhY3QpO1xuICB9XG59XG4iLCI8aDEgbWF0LWRpYWxvZy10aXRsZT5DcmVhdGUgZm9sZGVyPC9oMT5cblxuPG1hdC1kaWFsb2ctY29udGVudD5cbiAgPGZvcm0gY2xhc3M9XCJuZXctZm9sZGVyXCIgKG5nU3VibWl0KT1cImNyZWF0ZUZvbGRlcigpXCI+XG4gICAgPG1hdC1mb3JtLWZpZWxkIGFwcGVhcmFuY2U9XCJvdXRsaW5lXCI+XG4gICAgICA8bWF0LWxhYmVsPk5ldyBmb2xkZXIgbmFtZTwvbWF0LWxhYmVsPlxuICAgICAgPGlucHV0IG1hdElucHV0IG5hbWU9XCJmb2xkZXJOYW1lXCIgWyhuZ01vZGVsKV09XCJkYXRhLmZvbGRlck5hbWVcIj5cbiAgICA8L21hdC1mb3JtLWZpZWxkPlxuICA8L2Zvcm0+XG48L21hdC1kaWFsb2ctY29udGVudD5cblxuPG1hdC1kaWFsb2ctYWN0aW9ucyBhbGlnbj1cImVuZFwiPlxuICA8YnV0dG9uIG1hdC1idXR0b24gdHlwZT1cImJ1dHRvblwiIG1hdC1kaWFsb2ctY2xvc2U+Q2FuY2VsPC9idXR0b24+XG4gIDxidXR0b24gbWF0LXJhaXNlZC1idXR0b25cbiAgICAgICAgICBjb2xvcj1cInByaW1hcnlcIlxuICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgICAgIFtkaXNhYmxlZF09XCIhZGF0YS5mb2xkZXJOYW1lXCJcbiAgICAgICAgICAoY2xpY2spPVwiY3JlYXRlRm9sZGVyKClcIj5DcmVhdGU8L2J1dHRvbj5cbjwvbWF0LWRpYWxvZy1hY3Rpb25zPlxuIl19