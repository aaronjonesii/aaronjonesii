import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';
import { MatFormFieldModule } from "@angular/material/form-field";
import { MatInputModule } from "@angular/material/input";
import { FormsModule } from "@angular/forms";
import { MatButtonModule } from "@angular/material/button";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/material/form-field";
import * as i3 from "@angular/material/input";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/material/button";
export class NewFolderDialogComponent {
    /**
     * Constructor for the dialog component.
     *
     * @param {NewFolderDialogContract} data - Injected data containing initial
     * folder information.
     * @param {MatDialogRef} dialogRef - A reference to this dialog instance, used for
     * controlling its behavior.
     */
    constructor(data, dialogRef) {
        this.data = data;
        this.dialogRef = dialogRef;
    }
    /**
     * Closes the dialog and passes back the entered folder name.
     */
    createFolder() {
        const newFolderCloseContract = {
            folderName: this.data.folderName,
        };
        this.dialogRef.close(newFolderCloseContract);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.3", ngImport: i0, type: NewFolderDialogComponent, deps: [{ token: MAT_DIALOG_DATA }, { token: i1.MatDialogRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.3", type: NewFolderDialogComponent, isStandalone: true, selector: "anon-new-folder-dialog", ngImport: i0, template: "<h1 mat-dialog-title>Create folder</h1>\n\n<mat-dialog-content>\n  <form class=\"new-folder\" (ngSubmit)=\"createFolder()\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>New folder name</mat-label>\n      <input matInput name=\"folderName\" [(ngModel)]=\"data.folderName\">\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\n  <button mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!data.folderName\"\n          (click)=\"createFolder()\">Create</button>\n</mat-dialog-actions>\n", styles: ["::ng-deep .mat-dialog-container{border-radius:1rem}mat-dialog-content form.new-folder{margin-top:1rem}\n"], dependencies: [{ kind: "ngmodule", type: MatDialogModule }, { kind: "directive", type: i1.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i1.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "ngmodule", type: MatFormFieldModule }, { kind: "component", type: i2.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i2.MatLabel, selector: "mat-label" }, { kind: "ngmodule", type: MatInputModule }, { kind: "directive", type: i3.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i4.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i5.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.3", ngImport: i0, type: NewFolderDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'anon-new-folder-dialog', standalone: true, imports: [
                        MatDialogModule,
                        MatFormFieldModule,
                        MatInputModule,
                        FormsModule,
                        MatButtonModule,
                    ], template: "<h1 mat-dialog-title>Create folder</h1>\n\n<mat-dialog-content>\n  <form class=\"new-folder\" (ngSubmit)=\"createFolder()\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>New folder name</mat-label>\n      <input matInput name=\"folderName\" [(ngModel)]=\"data.folderName\">\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\n  <button mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!data.folderName\"\n          (click)=\"createFolder()\">Create</button>\n</mat-dialog-actions>\n", styles: ["::ng-deep .mat-dialog-container{border-radius:1rem}mat-dialog-content form.new-folder{margin-top:1rem}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i1.MatDialogRef }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3LWZvbGRlci1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhci1maXJlYmFzZS1zdG9yYWdlLW1hbmFnZXIvc3JjL2xpYi9jb21wb25lbnRzL25ldy1mb2xkZXItZGlhbG9nL25ldy1mb2xkZXItZGlhbG9nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItZmlyZWJhc2Utc3RvcmFnZS1tYW5hZ2VyL3NyYy9saWIvY29tcG9uZW50cy9uZXctZm9sZGVyLWRpYWxvZy9uZXctZm9sZGVyLWRpYWxvZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBZ0IsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7OztBQStCM0QsTUFBTSxPQUFPLHdCQUF3QjtJQUVuQzs7Ozs7OztPQU9HO0lBQ0gsWUFFUyxJQUE2QixFQUM1QixTQUFpRDtRQURsRCxTQUFJLEdBQUosSUFBSSxDQUF5QjtRQUM1QixjQUFTLEdBQVQsU0FBUyxDQUF3QztJQUN4RCxDQUFDO0lBRUo7O09BRUc7SUFDSCxZQUFZO1FBQ1YsTUFBTSxzQkFBc0IsR0FBaUM7WUFDM0QsVUFBVSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVTtTQUNqQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUMvQyxDQUFDOzhHQXhCVSx3QkFBd0Isa0JBV3pCLGVBQWU7a0dBWGQsd0JBQXdCLGtGQ3BDckMsMHBCQW1CQSxpS0RVSSxlQUFlLCtuQkFDZixrQkFBa0IsMFNBQ2xCLGNBQWMsMFdBQ2QsV0FBVyx1aUNBQ1gsZUFBZTs7MkZBR04sd0JBQXdCO2tCQWJwQyxTQUFTOytCQUNFLHdCQUF3QixjQUd0QixJQUFJLFdBQ1A7d0JBQ1AsZUFBZTt3QkFDZixrQkFBa0I7d0JBQ2xCLGNBQWM7d0JBQ2QsV0FBVzt3QkFDWCxlQUFlO3FCQUNoQjs7MEJBYUUsTUFBTTsyQkFBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1BVF9ESUFMT0dfREFUQSwgTWF0RGlhbG9nTW9kdWxlLCBNYXREaWFsb2dSZWYgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuaW1wb3J0IHsgTWF0Rm9ybUZpZWxkTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2Zvcm0tZmllbGRcIjtcbmltcG9ydCB7IE1hdElucHV0TW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2lucHV0XCI7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHsgTWF0QnV0dG9uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2J1dHRvblwiO1xuXG4vKipcbiAqIERlZmluZXMgdGhlIGRhdGEgY29udHJhY3QgZm9yIGluZm9ybWF0aW9uIHBhc3NlZCB0byB0aGUgTmV3Rm9sZGVyRGlhbG9nQ29tcG9uZW50LlxuICovXG5leHBvcnQgaW50ZXJmYWNlIE5ld0ZvbGRlckRpYWxvZ0NvbnRyYWN0IHtcbiAgZm9sZGVyTmFtZTogc3RyaW5nLFxuICBwYXRoOiBzdHJpbmcsXG59XG5cbi8qKlxuICogRGVmaW5lcyB0aGUgZGF0YSBjb250cmFjdCBmb3IgaW5mb3JtYXRpb24gcmV0dXJuZWQgd2hlblxuICogY2xvc2luZyB0aGUgTmV3Rm9sZGVyRGlhbG9nQ29tcG9uZW50LlxuICovXG5leHBvcnQgaW50ZXJmYWNlIE5ld0ZvbGRlckRpYWxvZ0Nsb3NlQ29udHJhY3Qge1xuICBmb2xkZXJOYW1lOiBzdHJpbmcsXG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Fub24tbmV3LWZvbGRlci1kaWFsb2cnLFxuICB0ZW1wbGF0ZVVybDogJy4vbmV3LWZvbGRlci1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybDogJy4vbmV3LWZvbGRlci1kaWFsb2cuY29tcG9uZW50LnNjc3MnLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbXG4gICAgTWF0RGlhbG9nTW9kdWxlLFxuICAgIE1hdEZvcm1GaWVsZE1vZHVsZSxcbiAgICBNYXRJbnB1dE1vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBNYXRCdXR0b25Nb2R1bGUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE5ld0ZvbGRlckRpYWxvZ0NvbXBvbmVudCB7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yIGZvciB0aGUgZGlhbG9nIGNvbXBvbmVudC5cbiAgICpcbiAgICogQHBhcmFtIHtOZXdGb2xkZXJEaWFsb2dDb250cmFjdH0gZGF0YSAtIEluamVjdGVkIGRhdGEgY29udGFpbmluZyBpbml0aWFsXG4gICAqIGZvbGRlciBpbmZvcm1hdGlvbi5cbiAgICogQHBhcmFtIHtNYXREaWFsb2dSZWZ9IGRpYWxvZ1JlZiAtIEEgcmVmZXJlbmNlIHRvIHRoaXMgZGlhbG9nIGluc3RhbmNlLCB1c2VkIGZvclxuICAgKiBjb250cm9sbGluZyBpdHMgYmVoYXZpb3IuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KE1BVF9ESUFMT0dfREFUQSlcbiAgICBwdWJsaWMgZGF0YTogTmV3Rm9sZGVyRGlhbG9nQ29udHJhY3QsXG4gICAgcHJpdmF0ZSBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxOZXdGb2xkZXJEaWFsb2dDb21wb25lbnQ+LFxuICApIHt9XG5cbiAgLyoqXG4gICAqIENsb3NlcyB0aGUgZGlhbG9nIGFuZCBwYXNzZXMgYmFjayB0aGUgZW50ZXJlZCBmb2xkZXIgbmFtZS5cbiAgICovXG4gIGNyZWF0ZUZvbGRlcigpIHtcbiAgICBjb25zdCBuZXdGb2xkZXJDbG9zZUNvbnRyYWN0OiBOZXdGb2xkZXJEaWFsb2dDbG9zZUNvbnRyYWN0ID0ge1xuICAgICAgZm9sZGVyTmFtZTogdGhpcy5kYXRhLmZvbGRlck5hbWUsXG4gICAgfTtcbiAgICB0aGlzLmRpYWxvZ1JlZi5jbG9zZShuZXdGb2xkZXJDbG9zZUNvbnRyYWN0KTtcbiAgfVxufVxuIiwiPGgxIG1hdC1kaWFsb2ctdGl0bGU+Q3JlYXRlIGZvbGRlcjwvaDE+XG5cbjxtYXQtZGlhbG9nLWNvbnRlbnQ+XG4gIDxmb3JtIGNsYXNzPVwibmV3LWZvbGRlclwiIChuZ1N1Ym1pdCk9XCJjcmVhdGVGb2xkZXIoKVwiPlxuICAgIDxtYXQtZm9ybS1maWVsZCBhcHBlYXJhbmNlPVwib3V0bGluZVwiPlxuICAgICAgPG1hdC1sYWJlbD5OZXcgZm9sZGVyIG5hbWU8L21hdC1sYWJlbD5cbiAgICAgIDxpbnB1dCBtYXRJbnB1dCBuYW1lPVwiZm9sZGVyTmFtZVwiIFsobmdNb2RlbCldPVwiZGF0YS5mb2xkZXJOYW1lXCI+XG4gICAgPC9tYXQtZm9ybS1maWVsZD5cbiAgPC9mb3JtPlxuPC9tYXQtZGlhbG9nLWNvbnRlbnQ+XG5cbjxtYXQtZGlhbG9nLWFjdGlvbnMgYWxpZ249XCJlbmRcIj5cbiAgPGJ1dHRvbiBtYXQtYnV0dG9uIHR5cGU9XCJidXR0b25cIiBtYXQtZGlhbG9nLWNsb3NlPkNhbmNlbDwvYnV0dG9uPlxuICA8YnV0dG9uIG1hdC1yYWlzZWQtYnV0dG9uXG4gICAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgICAgICBbZGlzYWJsZWRdPVwiIWRhdGEuZm9sZGVyTmFtZVwiXG4gICAgICAgICAgKGNsaWNrKT1cImNyZWF0ZUZvbGRlcigpXCI+Q3JlYXRlPC9idXR0b24+XG48L21hdC1kaWFsb2ctYWN0aW9ucz5cbiJdfQ==