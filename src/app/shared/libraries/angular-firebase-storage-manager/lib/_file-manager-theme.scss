@use 'sass:map';
@use '@angular/material' as mat;

@use './components/storage-file-preview/storage-file-preview-theme' as storageFilePreview;
@use './components/loading-or-error/loading-or-error-theme' as loadingOrError;

/* File Manager Component Color Mixins Below */
@mixin componentColorMixins($theme) {
  @include storageFilePreview.color($theme);
  @include loadingOrError.color($theme);
}

/* File Manager Component Typography Mixins Below */
@mixin componentTypographyMixins($theme) {
  @include storageFilePreview.typography($theme);
  @include loadingOrError.typography($theme);
}

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: mat.get-color-from-palette($color-config, 'primary');
  $accent-palette: mat.get-color-from-palette($color-config, accent);
  $warn-palette: mat.get-color-from-palette($color-config, warn);
  $foreground-palette: mat.get-color-from-palette($color-config, foreground);
  $background-palette: mat.get-color-from-palette($color-config, background);
  $grey-palette: mat.$gray-palette;

  anon-file-manager {
    .card { @include mat.elevation(2); }
    header.header {
      background-color: map.get($background-palette, 'app-bar');
      mat-icon { color: map.get($background-palette, 'icon'); }
    }
    header.header.items-selected {
      background-color: mat.get-color-from-palette($primary-palette);
      color: mat.get-color-from-palette($accent-palette);
    }
    .content {
      background-color: map.get($background-palette, 'card');
    }
    .table-wrapper {
      border-top-color: map.get($foreground-palette, 'divider');
      border-bottom-color: map.get($foreground-palette, 'divider');
    }
    table.mat-mdc-table th { border-color: map.get($foreground-palette, 'divider'); }
    table.mat-mdc-table tr.mat-mdc-row.selected {
      background-color: map.get($background-palette, 'selected-button');
    }
    table.mat-mdc-table tr.mat-mdc-row:hover:not(.selected) {
      background-color: map.get($background-palette, 'hover');
    }
    .empty-folder { color: map.get($background-palette, 'text'); }
    .empty-folder.hovering { background-color: map.get($background-palette, 'hover'); }

    .mat-mdc-table-sticky-border-elem-top,
    .mat-mdc-table-sticky-border-elem-right,
    .mat-mdc-table-sticky-border-elem-bottom,
    .mat-mdc-table-sticky-border-elem-left {
      border-color: mat.get-color-from-palette($foreground-palette, 'divider');
    }
  }

  /* File Manager Components Color Mixins Below */
  @include componentColorMixins($theme);
}

@mixin typography($theme) {
  $typography-config: mat.get-typography-config($theme);

  anon-file-manager {}

  /* File Manager Components Typography Mixins Below */
  @include componentTypographyMixins($theme);
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null { @include color($theme); }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null { @include typography($theme); }
}
