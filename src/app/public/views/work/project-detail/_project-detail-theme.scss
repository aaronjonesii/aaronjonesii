@use 'sass:map';
@use '@angular/material' as mat;

@use './project-detail-comment/project-detail-comment-theme' as projectDetailComment;

@mixin componentColorMixins($theme) {
  @include projectDetailComment.color($theme);
}

@mixin componentTypographyMixins($theme) {
  @include projectDetailComment.typography($theme);
}

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: mat.get-color-from-palette($color-config, 'primary');
  $accent-palette: mat.get-color-from-palette($color-config, accent);
  $warn-palette: mat.get-color-from-palette($color-config, warn);
  $foreground-palette: mat.get-color-from-palette($color-config, foreground);
  $background-palette: mat.get-color-from-palette($color-config, background);
  $grey-palette: mat.$gray-palette;

  aj-project-detail {
    mat-tab-group mat-tab-header.mat-mdc-tab-header {
      border-bottom-color: mat.get-color-from-palette($foreground-palette, 'divider');
    }

    .related-projects-container .related-project {
      background-color: mat.get-color-from-palette($primary-palette, 100);
      color: mat.get-color-from-palette($primary-palette, 900);
    }
    .related-projects-container .related-project:hover {
      background-color: mat.get-color-from-palette($primary-palette, 200);
    }
  }

  @include componentColorMixins($theme);
}

@mixin typography($theme) {
  $typography-config: mat.get-typography-config($theme);

  @include componentTypographyMixins($theme);
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null { @include color($theme); }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null { @include typography($theme); }
}
